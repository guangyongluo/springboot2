<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 映射文件配置，namespace指向接口 -->
<mapper namespace="com.vilin.myspringboot.mapper.UserMapper">
    <!-- select标签代表查询，findById要与方法名对应上 -->
    <select id="findById" parameterType="Integer" resultType="com.vilin.myspringboot.entity.User">
        select * from user where id = #{value}
    </select>

    <!-- Map将查询到的每一条记录包装成map, key就是字段名，value就是字段值 -->
    <select id="findUsersByOptions" parameterType="java.util.Map" resultType="java.util.LinkedHashMap">
        select * from user u, class c where u.classId = c.id
        <if test="className != null">
            and c.name = #{className}
        </if>
        <if test="score != null">
            and u.score > #{score}
        </if>
    </select>
    <!-- selectKey代表将数据进行回填，select LAST_INSERT_ID()用户获得最新插入的id
     LAST_INSERT_ID()是mysql的内置函数
     -->
    <insert id="insert" parameterType="com.vilin.myspringboot.entity.User">
        INSERT INTO `scott`.`user`(`name`, `sex`, `score`, `birthday`, `classId`)
        VALUES (#{name}, #{name} , #{score} , #{birthday} , #{classId} )
        <selectKey keyProperty="id" keyColumn="id" resultType="Integer" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="update" parameterType="com.vilin.myspringboot.entity.User">
        UPDATE `scott`.`user` SET `name` = #{name}, `sex` = #{name}, `score` = #{score}, `birthday` = #{birthday}, `classId` = #{classId} WHERE `id` = #{id} ;
    </update>

    <delete id="delete" parameterType="Integer">
        delete from user where id = #{value}
    </delete>
</mapper>